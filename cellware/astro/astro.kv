#:kivy 1.0
#:import kivy kivy
#:import win kivy.core.window
#:import icon kivy.garden.iconfonts.icon
#:import Theme astro.uix.Theme
#:import darker astro.uix.darker
#:import RangeSlider astro.rangeslider.RangeSlider
#:import ColorClippingWidget astro.polarscreen.ColorClippingWidget

<Widget>:
    # default: transparent
    border_color: (1, 1, 1, 0)

    canvas.after:
        Color:
            rgba: self.border_color

        Line:
            rectangle: self.x+1,self.y+1,self.width-1,self.height-1
            dash_offset: 5
            dash_length: 3

<MainMenuScreen>:
    BoxLayout:
        orientation: 'vertical'
        FlatButton:
            text: "Polar alignment"
            on_release: app.open_polar()
        FlatButton:
            text: "Camera control"
            on_release: app.open_camera()
        FlatButton:
            text: "Upgrade version"
            on_release: app.upgrade_from_github()
        FlatButton:
            text: "Settings"
            on_release: app.open_settings()
        FlatButton:
            text: "Quit"
            on_release: app.stop()


<PolarScreen>:
    ColorClippingWidget:
        id: color_clipping
        Image:
            id: piframe
            texture: root.camera.frame_texture
            pos: 0, 0
            size: root.size
            size_hint: None, None
            allow_stretch: True

    Image:
        id: stars
        visible: True
        opacity: 1 if self.visible else 0
        source: "polaris75mm.png"
        pos: 0, 0
        size: root.size
        size_hint: None, None
        allow_stretch: True
        canvas.before:
            PushMatrix
            Rotate:
                angle: root.stars_angle
                origin: self.center
        canvas.after:
            PopMatrix

    BoxLayout:
        orientation: 'horizontal'
        size_hint: None, None
        height: '50dp'
        width: root.width - dp(100)

        Label:
            text: 'Black: %d' % (root.ids.slider.value1)
            color: Theme.PRIMARY
            width: self.texture_size[0] + dp(10)
            size_hint_x: None
        RangeSlider:
            id: slider
            min: 0
            max: 255
            value1: 0
            value2: 255
            on_value1: color_clipping.black = self.value1
            on_value2: color_clipping.white = self.value2
        Label:
            text: 'White: %d' % (root.ids.slider.value2)
            color: Theme.PRIMARY
            width: self.texture_size[0] + dp(10)
            size_hint_x: None

    BoxLayout:
        # right toolbar
        right: root.right
        orientation: 'vertical'
        size_hint_x: None
        width: '100dp'

        Spinner:
            id: camera_model
            text: 'Canon'
            values: 'Canon', 'Pi Camera'
            picam: self.text == 'Pi Camera'

        FlatButton:
            text: root.camera.status
            show_border: False
            color: (1, 0, 0, 1)
            on_release: root.status_click()

        Label:
            text: "Frame %d" % root.camera.frame_no
            color: (1, 0, 0, 1)

        Label:
            text: "%.2f fps" % root.camera.fps
            color: (1, 0, 0, 1)

        Spinner:
            id: format
            text: 'RAW'
            values: 'RAW', 'MJPG'
            disabled: not root.ids.camera_model.picam

        Spinner:
            id: resolution
            text: '320x240'
            values: '2592x1944', '1296x972', '640x480', '320x240'
            disabled: not root.ids.camera_model.picam

        Spinner:
            id: shutter
            text: 'auto'
            values: 'auto', '0.5"', '1"', '1.5"', '2"', '2.5"', '3"', '4"', '5"', '6"'
            disabled: not root.ids.camera_model.picam

        BoxLayout:
            orientation: 'horizontal'
            size_hint_y: None
            height: "33dp"

            IconButton:
                icon: 'fa-play'
                font_size: "24sp"
                on_release: root.start_camera()

            IconButton:
                icon: 'fa-stop'
                font_size: "24sp"
                on_release: root.camera.stop()

            IconButton:
                icon: 'fa-circle'
                font_size: "24sp"
                color: (1, 0, 0, 1)
                on_release: root.start_camera(recording=True)



<PolarScreen>:
    Image:
        id: stars
        visible: True
        opacity: 1 if self.visible else 0
        source: "polaris75mm.png"
        pos: 0, 0
        size: root.size
        size_hint: None, None
        allow_stretch: True
        canvas.before:
            PushMatrix
            Rotate:
                angle: root.stars_angle
                origin: self.center
        canvas.after:
            PopMatrix

    # this is "added" at the end of the right_toolbar by the Python code in
    # the init
    BoxLayout:
        id: star_toolbar
        orientation: 'horizontal'
        size_hint_y: None
        height: "20dp"
        IconButton:
            icon: 'fa-minus'
            font_size: "24sp"
            on_release: root.stars_angle -= 1
        IconButton:
            icon: "fa-minus"
            font_size: "12sp"
            on_release: root.stars_angle -= 0.1
        IconButton:
            icon: "fa-star" if stars.visible else "fa-star-o"
            on_release: stars.visible = not stars.visible

        IconButton:
            icon: "fa-plus"
            font_size: "12sp"
            on_release: root.stars_angle += 0.1
        IconButton:
            icon: "fa-plus"
            font_size: "24sp"
            on_release: root.stars_angle += 1
