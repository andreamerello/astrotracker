#:kivy 1.0
#:import MyScatterPlaneLayout astro.uix
#:import Theme astro.uix.Theme

<RotationScreen>:

    on_size: root.autoscale()

    MyScatterPlaneLayout:
        id: scatter
        do_rotation: False
        do_translation: root.tool == 'move'
        do_scale: root.tool == 'move'
        auto_bring_to_front: False

        Image:
            id: sky
            source: 'test2.jpg'
            pos: 0, 0
            size: self.texture_size
            size_hint: None, None
            on_source: root.autoscale()

            canvas.after:
                # small circle whose visual size is always the same, to show
                # the rotation center
                Color:
                    rgba: (1, 1, 0, 1)
                Line:
                    circle: root.Ox, root.Oy, (10/root.ids.scatter.scale)

                # big circle whose radius is controlled by the user, to
                # visually check that the star trails match
                Color:
                    rgba: (1, 0, 0, 0.7)
                Line:
                    circle: root.Ox, root.Oy, root.sample_radius
                    dash_offset: 5
                    dash_length: 3

    BoxLayout:
        # right toolbar
        right: root.right
        orientation: 'vertical'
        size_hint_x: None
        width: '100dp'

        FlatButton:
            text: 'Load from Camera'

        FlatButton:
            text: 'Autoscale'
            on_release: root.autoscale()

        FlatButton:
            text: 'Move'
            tool: 'move'
            background_color: Theme.BGSUCCESS if root.tool == self.tool else Theme.WHITE
            on_release: root.tool = self.tool

        FlatButton:
            text: 'Set center'
            tool: 'set_center'
            background_color: Theme.BGSUCCESS if root.tool == self.tool else Theme.WHITE
            on_release: root.tool = self.tool

        FlatButton:
            text: 'Radius'
            tool: 'set_radius'
            background_color: Theme.BGSUCCESS if root.tool == self.tool else Theme.WHITE
            on_release: root.tool = self.tool

        FlatButton:
            text: 'Save'

        FlatButton:
            text: 'Reset'
